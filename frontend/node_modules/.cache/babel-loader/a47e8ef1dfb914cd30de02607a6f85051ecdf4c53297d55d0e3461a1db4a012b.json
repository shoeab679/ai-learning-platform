{"ast":null,"code":"import React,{createContext,useState,useContext}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const ThemeContext=/*#__PURE__*/createContext();export const useTheme=()=>useContext(ThemeContext);export const ThemeProvider=_ref=>{let{children}=_ref;const[darkMode,setDarkMode]=useState(false);const toggleTheme=()=>{setDarkMode(!darkMode);};return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:{darkMode,toggleTheme},children:children});};","map":{"version":3,"names":["React","createContext","useState","useContext","jsx","_jsx","ThemeContext","useTheme","ThemeProvider","_ref","children","darkMode","setDarkMode","toggleTheme","Provider","value"],"sources":["/home/ubuntu/workspace/ai-learning-platform/frontend/src/contexts/ThemeContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\n\nconst ThemeContext = createContext();\n\nexport const useTheme = () => useContext(ThemeContext);\n\nexport const ThemeProvider = ({ children }) => {\n  const [darkMode, setDarkMode] = useState(false);\n\n  const toggleTheme = () => {\n    setDarkMode(!darkMode);\n  };\n\n  return (\n    <ThemeContext.Provider value={{ darkMode, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,UAAU,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEnE,KAAM,CAAAC,YAAY,cAAGL,aAAa,CAAC,CAAC,CAEpC,MAAO,MAAM,CAAAM,QAAQ,CAAGA,CAAA,GAAMJ,UAAU,CAACG,YAAY,CAAC,CAEtD,MAAO,MAAM,CAAAE,aAAa,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACxC,KAAM,CAACE,QAAQ,CAAEC,WAAW,CAAC,CAAGV,QAAQ,CAAC,KAAK,CAAC,CAE/C,KAAM,CAAAW,WAAW,CAAGA,CAAA,GAAM,CACxBD,WAAW,CAAC,CAACD,QAAQ,CAAC,CACxB,CAAC,CAED,mBACEN,IAAA,CAACC,YAAY,CAACQ,QAAQ,EAACC,KAAK,CAAE,CAAEJ,QAAQ,CAAEE,WAAY,CAAE,CAAAH,QAAA,CACrDA,QAAQ,CACY,CAAC,CAE5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}